{"ts":1368022206724,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var DEBUG = false;\r\n\r\n// Render candidates & questions immediately, before jQueryMobile initiates anything\r\n$(\"#candidates :jqmData(role='content')\").html(_.template($(\"#template-candidates\").html(), candidates, {variable: \"data\"}));\r\n$(\"#questions :jqmData(role='content')\").html(_.template($(\"#template-questions\").html(), questions, {variable: \"data\"}));\r\n\r\n// If user tries to view the polling place page, check if it contains any results yet; otherwise redirect them to the search page\r\n$(\"#pollingplace\").bind(\"pagebeforeshow\", function() {\r\n\tif( ! $(\":jqmData(role='content')\", $(this)).text()) {\r\n\t\t$.mobile.changePage($(\"#search\"));\r\n\t}\r\n});\r\n\r\n// When the search page is shown, focus on the first form field\r\n$(\"#search\").bind(\"pageshow\", function() {\r\n\t$(\"form input\", $(this)).eq(0).focus();\r\n});\r\n\r\n$(document).ready(function() {\r\n\t// When search form is submitted\r\n\t$(\"#search form\").submit(function(e) {\r\n\t\tvar inputNode = $(\"input[name='address']\", $(this));\r\n\t\tvar input = $.trim(inputNode.val().replace(/^\\s+|\\s+$/g, \"\")); // Remove invalid chars\r\n\t\tif(input) {\r\n\t\t\t$(\"#pollingplace :jqmData(role='content')\").empty(); // Clear the page\r\n\t\t\t$.mobile.loading(\"show\");\r\n\t\t\t\r\n\t\t\t// Get the latitude/longitude of the address\r\n\t\t\tapi.geocode(input, function(data) {\r\n\t\t\t\tif(DEBUG) console.log(data);\r\n\t\t\t\tif(data) { // If a match was found\r\n\t\t\t\t\tvar userAddress = data.Address.StandardizedAddress; // This is the City's version of the address\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Get the polling place for this latitude/longitude\r\n\t\t\t\t\tapi.getPollingPlace(data.XCoord, data.YCoord, function(data) {\r\n\t\t\t\t\t\tif(DEBUG) console.log(data);\r\n\t\t\t\t\t\t$.mobile.loading(\"hide\");\r\n\t\t\t\t\t\tif(data) { // If a match was found\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Render results to content area\r\n\t\t\t\t\t\t\tvar fullAddress = addCityState(data.ADDRESS);\r\n\t\t\t\t\t\t\tvar contentData = {\r\n\t\t\t\t\t\t\t\tuserAddress: userAddress\r\n\t\t\t\t\t\t\t\t,pollingplace: data\r\n\t\t\t\t\t\t\t\t,mapUrl: api.getMapUrl(fullAddress)\r\n\t\t\t\t\t\t\t\t,staticMap: api.getStaticMap(fullAddress)\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t$(\"#pollingplace :jqmData(role='content')\").html(_.template($(\"#template-pollingplace\").html(), contentData)).trigger(\"create\");\r\n\t\t\t\t\t\t\t$.mobile.changePage($(\"#pollingplace\"));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\terror(\"A polling place for this address could not be found.\", $(\"#pollingplace\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, function(xhr, status, error) {\r\n\t\t\t\t\t\terror(\"An error occurred when trying to get your polling place from the database. Please try again.\", $(\"#pollingplace\"), xhr);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\terror(\"Unable to validate the address you entered. Please enter just the basic street address, i.e. 1234 Market\", $(\"#pollingplace\"));\r\n\t\t\t\t}\r\n\t\t\t}, function(xhr, status, error) {\r\n\t\t\t\terror(\"An error occurred when trying to validate your address with the database. Please try again.\", $(\"#pollingplace\"), xhr);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// No address entered\r\n\t\t\tinputNode.focus();\r\n\t\t}\r\n\t\treturn false;\r\n\t});\r\n});\r\n\r\nfunction error(msg, page, xhr) {\r\n\t$.mobile.loading(\"hide\");\r\n\tvar errorData = {msg: msg, xhr: xhr || null};\r\n\t$(\":jqmData(role='content')\", page).html(_.template($(\"#template-error\").html(), errorData)).trigger(\"create\");\r\n\t$.mobile.changePage($(\"#pollingplace\"));\r\n}\r\n\r\nfunction addCityState(input) {\r\n\tvar comma = input.indexOf(\",\");\r\n\tif(comma > -1) {\r\n\t\tinput = input.substr(0, comma);\r\n\t}\r\n\treturn input + \", Philadelphia, PA\";\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":3364}]],"length":3364}
{"contributors":[],"silentsave":false,"ts":1368022038842,"patch":[[{"diffs":[[0,"e;\r\n"],[-1,"\r\n// Render candidates & questions immediately, before jQueryMobile initiates anything\r\n"],[1,"var errors = {\r\n    pollingPlaceEmpty: \"A polling place for this address could not be found.\"\r\n    ,pollingPlaceFailed: \"An error occurred when trying to get your polling place from the database. Please try again.\"\r\n    ,geocodeEmpty: \"Unable to validate the address you entered. Please enter just the basic street address, i.e. 1234 Market\"\r\n\t,geocodeFailed: \"An error occurred when trying to validate your address with the database. Please try again.\"\r\n};\r\n\r\n// Fetch content from Google Doc at run time\r\nsetLoading(true);\r\napi.getGoogleDoc(function(data, tabletop) {\r\n\tif(DEBUG) console.log(data);\r\n\tsetLoading(false);\r\n\tif(data.Info !== undefined) {\r\n\t\tvar info = {sections: []};\r\n\t\t// Enable line breaks and separate top content from section content\r\n\t\t$.each(data.Info.elements, function() {\r\n\t\t\tthis.content = this.content.split(\"\\n\").join(\"<br>\\n\");\r\n\t\t\tif( ! this.section) info.top = this.content;\r\n\t\t\telse info.sections.push(this);\r\n\t\t});\r\n\t\t// Render data\r\n\t\tvar infoContainer = $(\"#info :jqmData(role='content')\");\r\n\t\tinfoContainer.html(_.template($(\"#template-info\").html(), info, {variable: \"data\"}));\r\n\t\tif(infoContainer.hasClass(\"ui-content\")) infoContainer.trigger(\"create\"); // If page has already been initialized, reinit\r\n\t}\r\n\tif(data.Candidates !== undefined) {\r\n\t\tvar candidates = {};\r\n\t\t// Reorganize candidates array by race\r\n\t\t$.each(data.Candidates.elements, function() {\r\n\t\t\tif(candidates[this.office] === undefined) {\r\n\t\t\t\tcandidates[this.office] = [];\r\n\t\t\t}\r\n\t\t\tcandidates[this.office].push(this);\r\n\t\t});\r\n\t\t// Render data\r\n\t\tvar candidatesContainer = "],[0,"$(\"#"]],"start1":16,"start2":16,"length1":96,"length2":1589},{"diffs":[[0,"ole='content')\")"],[1,";\r\n\t\tcandidatesContainer"],[0,".html(_.template"]],"start1":1626,"start2":1626,"length1":32,"length2":56},{"diffs":[[0,"a\"}));\r\n"],[1,"\t\tif(candidatesContainer.hasClass(\"ui-content\")) candidatesContainer.trigger(\"create\"); // If page has already been initialized, reinit\r\n\t}\r\n\tif(data.Questions !== undefined) {\r\n\t\t// Enable line breaks\r\n\t\t$.each(data.Questions.elements, function() {\r\n\t\t\tthis.question = this.question.split(\"\\n\").join(\"<br>\\n\");\r\n\t\t});\r\n\t\t// Render data\r\n\t\t"],[0,"$(\"#ques"]],"start1":1744,"start2":1744,"length1":16,"length2":356},{"diffs":[[0,"html(), "],[-1,"q"],[1,"data.Q"],[0,"uestions"],[1,".elements"],[0,", {varia"]],"start1":2174,"start2":2174,"length1":25,"length2":39},{"diffs":[[0,"\"data\"}));\r\n"],[1,"\t}\r\n});\r\n\t"],[0,"\r\n// If user"]],"start1":2218,"start2":2218,"length1":24,"length2":34},{"diffs":[[0,"nput"],[-1,"Node = "],[1," = $.trim("],[0,"$(\"i"]],"start1":2808,"start2":2808,"length1":15,"length2":18},{"diffs":[[0,"is))"],[-1,";\r\n\t\tvar input = $.trim(inputNode"],[0,".val"]],"start1":2853,"start2":2853,"length1":41,"length2":8},{"diffs":[[0,"t) {\r\n\t\t"],[1,"\tsearch(input);\r\n\t\t} else { // input is empty\r\n\t\t\t$(\"input[name='address']\", $(this)).focus(); // set focus back to address field\r\n\t\t}\r\n\t\treturn false; // don't allow form to submit. we'll handle it from here\r\n\t});\r\n});\r\n\r\nfunction search(input) {\r\n"],[0,"\t$(\"#pol"]],"start1":2926,"start2":2926,"length1":16,"length2":265},{"diffs":[[0,"e page\r\n"],[-1,"\t\t"],[0,"\t$.mobil"]],"start1":3248,"start2":3248,"length1":18,"length2":16},{"diffs":[[0,"ow\");\r\n\t"],[-1,"\t\t"],[0,"\r\n"],[-1,"\t\t"],[0,"\t// Get "]],"start1":3277,"start2":3277,"length1":22,"length2":18},{"diffs":[[0,"ddress\r\n"],[-1,"\t\t"],[0,"\tapi.geo"]],"start1":3326,"start2":3326,"length1":18,"length2":16},{"diffs":[[0,"on(data) {\r\n"],[1,"\t\tif(DEBUG) console.log(data);\r\n\t\tif(data) { // If a match was found\r\n\t\t\tvar userAddress = data.Address.StandardizedAddress; // This is the City's version of the address\r\n\t\t\t\r\n\t\t\t// Get the polling place for this latitude/longitude\r\n\t\t\tapi.getPollingPlace(data.XCoord, data.YCoord, function(data) {\r\n"],[0,"\t\t\t\tif(DEBUG"]],"start1":3360,"start2":3360,"length1":24,"length2":324},{"diffs":[[0,"log(data);\r\n"],[1,"\t\t\t\t$.mobile.loading(\"hide\");\r\n"],[0,"\t\t\t\tif(data)"]],"start1":3694,"start2":3694,"length1":24,"length2":55},{"diffs":[[0,"\t\t\t\t"],[-1,"var userAddress = data.Address.StandardizedAddress; // This is the City's version of the address\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Get the polling place for this latitude/longitude\r\n\t\t\t\t\tapi.getPollingPlace(data.XCoord, data.YCoord, function(data) {\r\n\t\t\t\t\t\tif(DEBUG) console.log(data);\r\n\t\t\t\t\t\t$.mobile.loading(\"hide\");\r\n\t\t\t\t\t\tif(data) { // If a match was found\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Render results to content area"],[1,"// Build results array"],[0,"\r\n\t\t\t\t\t"],[-1,"\t"],[-1,"\t"],[0,"var "]],"start1":3778,"start2":3778,"length1":409,"length2":37},{"diffs":[[0,";\r\n\t\t\t\t\t"],[-1,"\t\t"],[0,"var cont"]],"start1":3855,"start2":3855,"length1":18,"length2":16},{"diffs":[[0,"ntData = {\r\n"],[-1,"\t\t"],[0,"\t\t\t\t\t\tuserAd"]],"start1":3872,"start2":3872,"length1":26,"length2":24},{"diffs":[[0,"\r\n\t\t\t\t\t\t"],[-1,"\t\t"],[0,",polling"]],"start1":3914,"start2":3914,"length1":18,"length2":16},{"diffs":[[0,": data\r\n"],[-1,"\t\t"],[0,"\t\t\t\t\t\t,m"]],"start1":3935,"start2":3935,"length1":18,"length2":16},{"diffs":[[0,"\r\n\t\t\t\t\t\t"],[-1,"\t"],[-1,"\t"],[0,",staticM"]],"start1":3984,"start2":3984,"length1":18,"length2":16},{"diffs":[[0,"\t\t\t\t"],[-1,"\t\t"],[0,"};\r\n\t\t"],[1,"\t\t\t// Render results to content area\r\n"],[0,"\t\t\t\t"]],"start1":4036,"start2":4036,"length1":16,"length2":52},{"diffs":[[0,"\"create\");\r\n"],[-1,"\t\t"],[0,"\t\t\t\t\t$.mobil"]],"start1":4207,"start2":4207,"length1":26,"length2":24},{"diffs":[[0,"\t\t\t\t"],[-1,"\t\t"],[0,"} else {"],[-1,"\r\n\t\t\t\t\t\t\terror(\"A p"],[1," // getP"],[0,"olling"],[-1," p"],[1,"P"],[0,"lace "],[-1,"for this address could not be found.\", $"],[1,"data is empty\r\n\t\t\t\t\tthrowError"],[0,"(\""],[-1,"#"],[0,"polling"],[-1,"p"],[1,"P"],[0,"lace"],[1,"Empty"],[0,"\""],[-1,")"],[0,");\r\n"],[-1,"\t\t"],[0,"\t\t\t\t"]],"start1":4266,"start2":4266,"length1":113,"length2":90},{"diffs":[[0,"\t\t}\r\n\t\t\t"],[-1,"\t\t"],[0,"}, funct"]],"start1":4354,"start2":4354,"length1":18,"length2":16},{"diffs":[[0,"r) {"],[-1,"\r\n\t\t\t\t\t\terror(\"An error occurred when trying to get your p"],[1," // getP"],[0,"olling"],[-1," p"],[1,"P"],[0,"lace "],[-1,"from the database. Please try again.\", $"],[1,"error\r\n\t\t\t\tthrowError"],[0,"(\""],[-1,"#"],[0,"polling"],[-1,"p"],[1,"P"],[0,"lace"],[1,"Failed"],[0,"\""],[-1,")"],[0,", xh"]],"start1":4391,"start2":4391,"length1":136,"length2":70},{"diffs":[[0,");\r\n"],[-1,"\t\t"],[0,"\t\t\t});\r\n"],[-1,"\t\t"],[0,"\t\t} "]],"start1":4462,"start2":4462,"length1":20,"length2":16},{"diffs":[[0,"se {"],[-1,"\r\n\t\t\t\t\terror(\"Unable to validate the address you entered. Please enter just the basic street address, i.e. 1234 Market\", $(\"#pollingplace\")"],[1," // geocode data is empty\r\n\t\t\tthrowError(\"geocodeEmpty\""],[0,");\r\n"],[-1,"\t\t"],[0,"\t\t}\r\n"],[-1,"\t\t"],[0,"\t}, "]],"start1":4480,"start2":4480,"length1":160,"length2":72},{"diffs":[[0,"r) {"],[-1,"\r\n\t\t\t\terror(\"An error occurred when trying to validate your address with the database. Please try again.\", $(\"#pollingplace\")"],[1," // geocode error\r\n\t\tthrowError(\"geocodeFailed\""],[0,", xh"]],"start1":4578,"start2":4578,"length1":133,"length2":55},{"diffs":[[0,");\r\n"],[-1,"\t\t"],[0,"\t});\r\n"],[-1,"\t\t} else {\r\n\t\t\t// No address entered\r\n\t\t\tinputNode.focus();\r\n\t\t}\r\n\t\treturn false;\r\n\t});\r\n});\r\n\r\nfunction error(msg, pag"],[1,"}\r\n\r\n// Render message with error template on #pollingplace\r\nfunction throwError(cod"],[0,"e, x"]],"start1":4634,"start2":4634,"length1":135,"length2":98},{"diffs":[[0,"= {msg: "],[-1,"msg"],[1,"(errors[code] !== undefined ? errors[code] : \"\")"],[0,", xhr: x"]],"start1":4782,"start2":4782,"length1":19,"length2":64},{"diffs":[[0,"};\r\n\t$(\""],[1,"#pollingplace "],[0,":jqmData"]],"start1":4856,"start2":4856,"length1":16,"length2":30},{"diffs":[[0,"t')\""],[-1,", page"],[0,").ht"]],"start1":4899,"start2":4899,"length1":14,"length2":8},{"diffs":[[0,"e\"));\r\n}\r\n\r\n"],[1,"// Helper to remove any city/state and add \", Philadelphia, PA\"\r\n"],[0,"function add"]],"start1":5018,"start2":5018,"length1":24,"length2":89},{"diffs":[[0,"hia, PA\";\r\n}"],[1,"\r\n\r\n// This allows us to do $.mobile.loading() before jQM is loaded\r\nfunction setLoading(on) {\r\n\tif(on) $(\"body\").addClass(\"ui-loading\");\r\n\telse $(\"body\").removeClass(\"ui-loading\");\r\n}"]],"start1":5247,"start2":5247,"length1":12,"length2":196}]],"length":5443,"saved":false}
